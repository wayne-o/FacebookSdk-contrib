




// --------------------------------
// <copyright file="GraphObjectBuilder.tt" company="Thuzi, LLC">
//     Copyright (c) 2010 Thuzi, LLC (thuzi.com)
// </copyright>
// <author>Nathan Totten (ntotten.com) and Jim Zimmerman (jimzimmerman.com)</author>
// <license>Released under the terms of the Microsoft Public License (Ms-PL)</license>
// <website>http://facebooksdk.codeplex.com</website>
// <autogenerated>
//   This file was generated using GraphObjectBuilder.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
// ---------------------------------

 
 
 

using System;
using System.Collections.ObjectModel; 
using System.Data.Linq.Mapping;
using System.ComponentModel.DataAnnotations;


namespace Facebook.Api.Graph {


	[Table(Name = "Album")]
	public partial class GraphAlbum {


		/// <summary>
		/// The album ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The profile that created this album
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The title of the album
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The description of the album
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// The location of the album
		/// </summary>
		[Column(Name = "location")]
		public string Location { get; set; }


		/// <summary>
		/// A link to this album on Facebook
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }


		/// <summary>
		/// The album cover photo ID
		/// </summary>
		[Column(Name = "cover_photo")]
		public string CoverPhoto { get; set; }


		/// <summary>
		/// The privacy settings for the album
		/// </summary>
		[Column(Name = "privacy")]
		public string Privacy { get; set; }


		/// <summary>
		/// The number of photos in this album
		/// </summary>
		[Column(Name = "count")]
		public string Count { get; set; }


		/// <summary>
		/// The type of the album: profile, mobile, wall, normal or album
		/// </summary>
		[Column(Name = "type")]
		public string Type { get; set; }


		/// <summary>
		/// The time the photo album was initially created
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The last time the photo album was updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }

 
	}
	
	public partial class AlbumGraphService : GraphService<GraphAlbum> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The photos contained in this album
		/// </summary>
		public Collection<GraphPhoto> GetPhotos(string id) {
			return GetConnectionItems<GraphPhoto>("photos", id);
		}


		/// <summary>
		/// The likes made on this album
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(string id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}


		/// <summary>
		/// The comments made on this album
		/// </summary>
		public Collection<GraphPost> GetComments(string id) {
			return GetConnectionItems<GraphPost>("comments", id);
		}

		
		
	}


	[Table(Name = "Application")]
	public partial class GraphApplication {


		/// <summary>
		/// The application ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The title of the application
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The description of the application written by the 3rd party developers
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// The category of the application
		/// </summary>
		[Column(Name = "category")]
		public string Category { get; set; }


		/// <summary>
		/// A link to application dashboard on Facebook
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }

 
	}
	
	public partial class ApplicationGraphService : GraphService<GraphApplication> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The application's wall
		/// </summary>
		public Collection<GraphPost> GetFeed(string id) {
			return GetConnectionItems<GraphPost>("feed", id);
		}


		/// <summary>
		/// The applications's own posts
		/// </summary>
		public Collection<GraphPost> GetPosts(string id) {
			return GetConnectionItems<GraphPost>("posts", id);
		}


		/// <summary>
		/// The photos, videos, and posts in which this application has been tagged
		/// </summary>
		public Collection<GraphPost> GetTagged(string id) {
			return GetConnectionItems<GraphPost>("tagged", id);
		}


		/// <summary>
		/// The application's posted links
		/// </summary>
		public Collection<GraphLink> GetLinks(string id) {
			return GetConnectionItems<GraphLink>("links", id);
		}


		/// <summary>
		/// The photos this application has uploaded
		/// </summary>
		public Collection<GraphPhoto> GetPhotos(string id) {
			return GetConnectionItems<GraphPhoto>("photos", id);
		}


		/// <summary>
		/// The photo albums this page has created
		/// </summary>
		public Collection<GraphAlbum> GetAlbums(string id) {
			return GetConnectionItems<GraphAlbum>("albums", id);
		}


		/// <summary>
		/// The application's status updates
		/// </summary>
		public Collection<GraphStatus> GetStatuses(string id) {
			return GetConnectionItems<GraphStatus>("statuses", id);
		}


		/// <summary>
		/// The videos this application has created
		/// </summary>
		public Collection<GraphVideo> GetVideos(string id) {
			return GetConnectionItems<GraphVideo>("videos", id);
		}


		/// <summary>
		/// The application's notes
		/// </summary>
		public Collection<GraphNote> GetNotes(string id) {
			return GetConnectionItems<GraphNote>("notes", id);
		}


		/// <summary>
		/// The events this page is managing
		/// </summary>
		public Collection<GraphEvent> GetEvents(string id) {
			return GetConnectionItems<GraphEvent>("events", id);
		}


		/// <summary>
		/// All of the subscriptions this application has for real-time notifications
		/// </summary>
		public Collection<GraphSubscription> GetSubscriptions(string id) {
			return GetConnectionItems<GraphSubscription>("subscriptions", id);
		}


		/// <summary>
		/// Usage metrics for this application
		/// </summary>
		public Collection<GraphInsight> GetInsights(string id) {
			return GetConnectionItems<GraphInsight>("insights", id);
		}


		/// <summary>
		/// Test User accounts associated with the application
		/// </summary>
		public Collection<NameCategoryIdItem> GetAccounts(string id) {
			return GetConnectionItems<NameCategoryIdItem>("accounts", id);
		}


		/// <summary>
		/// Reviews of this application
		/// </summary>
		public Collection<GraphReview> GetReviews(string id) {
			return GetConnectionItems<GraphReview>("reviews", id);
		}

		
		
	}


	[Table(Name = "Checkin")]
	public partial class GraphCheckin {


		/// <summary>
		/// The checkin ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The ID and name of the user who made the checkin
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The users the author tagged in the checkin
		/// </summary>
		[Column(Name = "tags")]
		public string Tags { get; set; }


		/// <summary>
		/// Information about the Facebook Page that represents the location of the checkin
		/// </summary>
		[Column(Name = "place")]
		public string Place { get; set; }


		/// <summary>
		/// The message the user added to the checkin
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// Information about the application that made the checkin
		/// </summary>
		[Column(Name = "application")]
		public string Application { get; set; }


		/// <summary>
		/// The time the checkin was created
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }

 
	}
	
	public partial class CheckinGraphService : GraphService<GraphCheckin> {	

		
		
	}


	[Table(Name = "Comment")]
	public partial class GraphComment {


		/// <summary>
		/// The Facebook ID of the comment
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The timedate the comment was created
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The comment text
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// The user that created the comment
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The number of times this comment was liked
		/// </summary>
		[Column(Name = "likes")]
		public string Likes { get; set; }

 
	}
	
	public partial class CommentGraphService : GraphService<GraphComment> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the likes on this comment
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(string id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}

		
		
	}


	[Table(Name = "Domain")]
	public partial class GraphDomain {


		/// <summary>
		/// The id of the domain
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The name of the domain
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }

 
	}
	
	public partial class DomainGraphService : GraphService<GraphDomain> {	

		
		
	}


	[Table(Name = "Event")]
	public partial class GraphEvent {


		/// <summary>
		/// The event ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The profile that created the event
		/// </summary>
		[Column(Name = "owner")]
		public string Owner { get; set; }


		/// <summary>
		/// The event title
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The long-form description of the event
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// The start time of the event, as you want it to be displayed on facebook
		/// </summary>
		[Column(Name = "start_time")]
		public DateTime StartTime { get; set; }


		/// <summary>
		/// The end time of the event, as you want it to be displayed on facebook
		/// </summary>
		[Column(Name = "end_time")]
		public DateTime EndTime { get; set; }


		/// <summary>
		/// The location for this event
		/// </summary>
		[Column(Name = "location")]
		public string Location { get; set; }


		/// <summary>
		/// The location of this event
		/// </summary>
		[Column(Name = "venue")]
		public string Venue { get; set; }


		/// <summary>
		/// The visibility of this event
		/// </summary>
		[Column(Name = "privacy")]
		public string Privacy { get; set; }


		/// <summary>
		/// The last time the event was updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }

 
	}
	
	public partial class EventGraphService : GraphService<GraphEvent> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// This event's wall
		/// </summary>
		public Collection<GraphPost> GetFeed(string id) {
			return GetConnectionItems<GraphPost>("feed", id);
		}


		/// <summary>
		/// All of the users who have been not yet responded to their invitation to this event
		/// </summary>
		public NameIdItem GetNoreply(string id) {
			return GetConnectionItem<NameIdItem>("noreply", id);
		}


		/// <summary>
		/// All of the users who have been responded "Maybe" to their invitation to this event
		/// </summary>
		public NameIdItem GetMaybe(string id) {
			return GetConnectionItem<NameIdItem>("maybe", id);
		}


		/// <summary>
		/// All of the users who have been invited to this event
		/// </summary>
		public Collection<NameIdItem> GetInvited(string id) {
			return GetConnectionItems<NameIdItem>("invited", id);
		}


		/// <summary>
		/// All of the users who are attending this event
		/// </summary>
		public NameIdItem GetAttending(string id) {
			return GetConnectionItem<NameIdItem>("attending", id);
		}


		/// <summary>
		/// All of the users who declined their invitation to this event
		/// </summary>
		public Collection<NameIdItem> GetDeclined(string id) {
			return GetConnectionItems<NameIdItem>("declined", id);
		}

		
		
	}


	[Table(Name = "FriendList")]
	public partial class GraphFriendList {


		/// <summary>
		/// The friend list ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The name of the friend list
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }

 
	}
	
	public partial class FriendListGraphService : GraphService<GraphFriendList> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the users who are members of this list
		/// </summary>
		public Collection<NameIdItem> GetMembers(string id) {
			return GetConnectionItems<NameIdItem>("members", id);
		}

		
		
	}


	[Table(Name = "Group")]
	public partial class GraphGroup {


		/// <summary>
		/// The group ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The URL for the group's icon
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }


		/// <summary>
		/// The profile that created this group
		/// </summary>
		[Column(Name = "owner")]
		public string Owner { get; set; }


		/// <summary>
		/// The name of the group
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// A brief description of the group
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// The URL for the group's website
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }


		/// <summary>
		/// The privacy setting of the group
		/// </summary>
		[Column(Name = "privacy")]
		public string Privacy { get; set; }


		/// <summary>
		/// The last time the group was updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }

 
	}
	
	public partial class GroupGraphService : GraphService<GraphGroup> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// This group's wall
		/// </summary>
		public Collection<GraphPost> GetFeed(string id) {
			return GetConnectionItems<GraphPost>("feed", id);
		}


		/// <summary>
		/// All of the users who are members of this group (can only currently return the first 500 members)
		/// </summary>
		public Collection<NameIdItem> GetMembers(string id) {
			return GetConnectionItems<NameIdItem>("members", id);
		}


		/// <summary>
		/// The docs in this group
		/// </summary>
		public Collection<GraphDoc> GetDocs(string id) {
			return GetConnectionItems<GraphDoc>("docs", id);
		}

		
		
	}


	[Table(Name = "Insights")]
	public partial class GraphInsight {


		/// <summary>
		/// ID of the insight
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// Name of the insight
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// Length of the period during which the insights were collected
		/// </summary>
		[Column(Name = "period")]
		public string Period { get; set; }


		/// <summary>
		/// Individual data points for the insight
		/// </summary>
		[Column(Name = "values")]
		public string Values { get; set; }

 
	}
	
	public partial class InsightGraphService : GraphService<GraphInsight> {	

		
		
	}


	[Table(Name = "Link")]
	public partial class GraphLink {


		/// <summary>
		/// The link ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The user that created the link
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The URL that was shared
		/// </summary>
		[Column(Name = "link")]
		public string Value { get; set; }


		/// <summary>
		/// The name of the link
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The caption of the link (appears beneath the link name)
		/// </summary>
		[Column(Name = "caption")]
		public string Caption { get; set; }


		/// <summary>
		/// A description of the link (appears beneath the link caption)
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// A URL to the link icon that Facebook displays in the news feed
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }


		/// <summary>
		/// A URL to the thumbnail image used in the link post
		/// </summary>
		[Column(Name = "picture")]
		public string Picture { get; set; }


		/// <summary>
		/// The optional message from the user about this link
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// The time the message was published
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }

 
	}
	
	public partial class LinkGraphService : GraphService<GraphLink> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the comments on this link
		/// </summary>
		public Collection<GraphPost> GetComments(string id) {
			return GetConnectionItems<GraphPost>("comments", id);
		}

		
		
	}


	[Table(Name = "Message")]
	public partial class GraphMessage {

 
	}
	
	public partial class MessageGraphService : GraphService<GraphMessage> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The unique ID for this message
		/// </summary>
		public GraphId GetId(string id) {
			return GetConnectionItem<GraphId>("id", id);
		}


		/// <summary>
		/// A timestamp of when this message was created
		/// </summary>
		public GraphCreatedTime GetCreatedTime(string id) {
			return GetConnectionItem<GraphCreatedTime>("created_time", id);
		}


		/// <summary>
		/// The sender of this message
		/// </summary>
		public GraphFrom GetFrom(string id) {
			return GetConnectionItem<GraphFrom>("from", id);
		}


		/// <summary>
		/// A list of the message recipients
		/// </summary>
		public GraphTo GetTo(string id) {
			return GetConnectionItem<GraphTo>("to", id);
		}


		/// <summary>
		/// The text of the message
		/// </summary>
		public GraphMessage GetMessage(string id) {
			return GetConnectionItem<GraphMessage>("message", id);
		}

		
		
	}


	[Table(Name = "Note")]
	public partial class GraphNote {


		/// <summary>
		/// The note ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The profile that created the note
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The title of the note
		/// </summary>
		[Column(Name = "subject")]
		public string Subject { get; set; }


		/// <summary>
		/// The content of the note
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// The time the note was initially published
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The time the note was last updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }


		/// <summary>
		/// The icon that Facebook displays with notes
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }

 
	}
	
	public partial class NoteGraphService : GraphService<GraphNote> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the comments on this note
		/// </summary>
		public Collection<GraphPost> GetComments(string id) {
			return GetConnectionItems<GraphPost>("comments", id);
		}


		/// <summary>
		/// Users who like the note
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(string id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}

		
		
	}


	[Table(Name = "Page")]
	public partial class GraphPage {


		/// <summary>
		/// The Page's ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The Page's name
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The Page's category
		/// </summary>
		[Column(Name = "category")]
		public string Category { get; set; }


		/// <summary>
		/// The number of users who like the Page
		/// </summary>
		[Column(Name = "likes")]
		public string Likes { get; set; }


		/// <summary>
		/// The Page's street address, latitude, and longitude (when available)
		/// </summary>
		[Column(Name = "location")]
		public string Location { get; set; }


		/// <summary>
		/// The phone number (not always normalized for country code) for the Page
		/// </summary>
		[Column(Name = "phone")]
		public string Phone { get; set; }


		/// <summary>
		/// The number of users who have checked in to the Page
		/// </summary>
		[Column(Name = "checkins")]
		public string Checkins { get; set; }

 
	}
	
	public partial class PageGraphService : GraphService<GraphPage> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The Page's wall
		/// </summary>
		public Collection<GraphPost> GetFeed(string id) {
			return GetConnectionItems<GraphPost>("feed", id);
		}


		/// <summary>
		/// The photos, videos, and posts in which the Page has been tagged
		/// </summary>
		public Collection<GraphPost> GetTagged(string id) {
			return GetConnectionItems<GraphPost>("tagged", id);
		}


		/// <summary>
		/// The Page's posted links
		/// </summary>
		public Collection<GraphLink> GetLinks(string id) {
			return GetConnectionItems<GraphLink>("links", id);
		}


		/// <summary>
		/// The Page's uploaded photos
		/// </summary>
		public Collection<GraphPhoto> GetPhotos(string id) {
			return GetConnectionItems<GraphPhoto>("photos", id);
		}


		/// <summary>
		/// Groups the Page belongs to
		/// </summary>
		public Collection<GraphGroup> GetGroups(string id) {
			return GetConnectionItems<GraphGroup>("groups", id);
		}


		/// <summary>
		/// The photo albums the Page has uploaded
		/// </summary>
		public Collection<GraphAlbum> GetAlbums(string id) {
			return GetConnectionItems<GraphAlbum>("albums", id);
		}


		/// <summary>
		/// The Page's status updates
		/// </summary>
		public Collection<GraphStatus> GetStatuses(string id) {
			return GetConnectionItems<GraphStatus>("statuses", id);
		}


		/// <summary>
		/// The videos the Page has uploaded
		/// </summary>
		public Collection<GraphVideo> GetVideos(string id) {
			return GetConnectionItems<GraphVideo>("videos", id);
		}


		/// <summary>
		/// The Page's notes
		/// </summary>
		public Collection<GraphNote> GetNotes(string id) {
			return GetConnectionItems<GraphNote>("notes", id);
		}


		/// <summary>
		/// The Page's own posts
		/// </summary>
		public Collection<GraphPost> GetPosts(string id) {
			return GetConnectionItems<GraphPost>("posts", id);
		}


		/// <summary>
		/// The events the Page is attending
		/// </summary>
		public Collection<GraphEvent> GetEvents(string id) {
			return GetConnectionItems<GraphEvent>("events", id);
		}


		/// <summary>
		/// Checkins made by friends of the current session user
		/// </summary>
		public Collection<GraphCheckin> GetCheckins(string id) {
			return GetConnectionItems<GraphCheckin>("checkins", id);
		}

		
		
	}


	[Table(Name = "Photo")]
	public partial class GraphPhoto {


		/// <summary>
		/// The photo ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The profile (user or page) that posted this photo
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The tagged users and their positions in this photo
		/// </summary>
		[Column(Name = "tags")]
		public string Tags { get; set; }


		/// <summary>
		/// The caption given to this photo
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The icon that Facebook displays when photos are published to the Feed
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }


		/// <summary>
		/// The thumbnail-sized source of the photo
		/// </summary>
		[Column(Name = "picture")]
		public string Picture { get; set; }


		/// <summary>
		/// The full-sized source of the photo
		/// </summary>
		[Column(Name = "source")]
		public string Source { get; set; }


		/// <summary>
		/// The height of the photo in pixels
		/// </summary>
		[Column(Name = "height")]
		public string Height { get; set; }


		/// <summary>
		/// The width of the photo in pixels
		/// </summary>
		[Column(Name = "width")]
		public string Width { get; set; }


		/// <summary>
		/// The 4 different stored representations of the photo
		/// </summary>
		[Column(Name = "images")]
		public string Images { get; set; }


		/// <summary>
		/// A link to the photo on Facebook
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }


		/// <summary>
		/// The time the photo was initially published
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The last time the photo or its caption was updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }


		/// <summary>
		/// The position of this photo in the album
		/// </summary>
		[Column(Name = "position")]
		public string Position { get; set; }

 
	}
	
	public partial class PhotoGraphService : GraphService<GraphPhoto> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the comments on this photo
		/// </summary>
		public Collection<GraphPost> GetComments(string id) {
			return GetConnectionItems<GraphPost>("comments", id);
		}


		/// <summary>
		/// Users who like the photo
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(string id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}


		/// <summary>
		/// The Users tagged in the photo
		/// </summary>
		public Collection<GraphTag> GetTags(string id) {
			return GetConnectionItems<GraphTag>("tags", id);
		}

		
		
	}


	[Table(Name = "Post")]
	public partial class GraphPost {


		/// <summary>
		/// The post ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// Information about the user who posted the message
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// Profiles mentioned or targeted in this post
		/// </summary>
		[Column(Name = "to")]
		public string To { get; set; }


		/// <summary>
		/// The message
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// If available, a link to the picture included with this post
		/// </summary>
		[Column(Name = "picture")]
		public string Picture { get; set; }


		/// <summary>
		/// The link attached to this post
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }


		/// <summary>
		/// The name of the link
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The caption of the link (appears beneath the link name)
		/// </summary>
		[Column(Name = "caption")]
		public string Caption { get; set; }


		/// <summary>
		/// A description of the link (appears beneath the link caption)
		/// </summary>
		[Column(Name = "description")]
		public string Description { get; set; }


		/// <summary>
		/// A URL to a Flash movie or video file to be embedded within the post
		/// </summary>
		[Column(Name = "source")]
		public string Source { get; set; }


		/// <summary>
		/// A list of properties for an uploaded video, for example, the length of the video
		/// </summary>
		[Column(Name = "properties")]
		public string Properties { get; set; }


		/// <summary>
		/// A link to an icon representing the type of this post
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }


		/// <summary>
		/// A list of available actions on the post (including commenting, liking, and an optional app-specified action)
		/// </summary>
		[Column(Name = "actions")]
		public string Actions { get; set; }


		/// <summary>
		/// The privacy settings of the Post
		/// </summary>
		[Column(Name = "privacy")]
		public string Privacy { get; set; }


		/// <summary>
		/// A string indicating the type for this post (including link, photo, video)
		/// </summary>
		[Column(Name = "type")]
		public string Type { get; set; }


		/// <summary>
		/// Likes for this post
		/// </summary>
		[Required]
		[Column(Name = "likes")]
		public string Likes { get; set; }


		/// <summary>
		/// Comments for this post
		/// </summary>
		[Required]
		[Column(Name = "comments")]
		public string Comments { get; set; }


		/// <summary>
		/// The Facebook object id for an uploaded photo or video
		/// </summary>
		[Column(Name = "object_id")]
		public string ObjectId { get; set; }


		/// <summary>
		/// Information about the application this post came from
		/// </summary>
		[Column(Name = "application")]
		public string Application { get; set; }


		/// <summary>
		/// The time the post was initially published
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The time of the last comment on this post
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }


		/// <summary>
		/// Location and language restrictions for Page posts only
		/// </summary>
		[Column(Name = "targeting")]
		public string Targeting { get; set; }

 
	}
	
	public partial class PostGraphService : GraphService<GraphPost> {	

		
		
	}


	[Table(Name = "Review")]
	public partial class GraphReview {


		/// <summary>
		/// The Facebook ID of the review
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The user that created the review
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The application to which this review applies
		/// </summary>
		[Column(Name = "to")]
		public string To { get; set; }


		/// <summary>
		/// The review text (optional)
		/// </summary>
		[Column(Name = "message")]
		public string Message { get; set; }


		/// <summary>
		/// The review rating
		/// </summary>
		[Column(Name = "rating")]
		public string Rating { get; set; }


		/// <summary>
		/// The timedate the review was created
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }

 
	}
	
	public partial class ReviewGraphService : GraphService<GraphReview> {	

		
		
	}


	[Table(Name = "Status message")]
	public partial class GraphStatus Message {

 
	}
	
	public partial class Status MessageGraphService : GraphService<GraphStatus Message> {	

		
		
	}


	[Table(Name = "Subscription")]
	public partial class GraphSubscription {


		/// <summary>
		/// The object type to subscribe to
		/// </summary>
		[Column(Name = "object")]
		public string Object { get; set; }


		/// <summary>
		/// The list of fields for the object type
		/// </summary>
		[Column(Name = "fields")]
		public string Fields { get; set; }


		/// <summary>
		/// An endpoint on your domain which can handle the real-time notifications
		/// </summary>
		[Column(Name = "callback_url")]
		public string CallbackUrl { get; set; }


		/// <summary>
		/// Whether or not the subscription is active or not
		/// </summary>
		[Column(Name = "active")]
		public string Active { get; set; }

 
	}
	
	public partial class SubscriptionGraphService : GraphService<GraphSubscription> {	

		
		
	}


	[Table(Name = "Thread")]
	public partial class GraphThread {

 
	}
	
	public partial class ThreadGraphService : GraphService<GraphThread> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The unique ID for this message thread
		/// </summary>
		public GraphId GetId(string id) {
			return GetConnectionItem<GraphId>("id", id);
		}


		/// <summary>
		/// Fragment of the thread for use in thread lists
		/// </summary>
		public GraphSnippet GetSnippet(string id) {
			return GetConnectionItem<GraphSnippet>("snippet", id);
		}


		/// <summary>
		/// Timestamp of when the thread was last updated
		/// </summary>
		public GraphUpdatedTime GetUpdatedTime(string id) {
			return GetConnectionItem<GraphUpdatedTime>("updated_time", id);
		}


		/// <summary>
		/// Number of messages in the thread
		/// </summary>
		public GraphMessageCount GetMessageCount(string id) {
			return GetConnectionItem<GraphMessageCount>("message_count", id);
		}


		/// <summary>
		/// Number of unread messages in the thread
		/// </summary>
		public GraphUnreadCount GetUnreadCount(string id) {
			return GetConnectionItem<GraphUnreadCount>("unread_count", id);
		}

		
		
	}


	[Table(Name = "User")]
	public partial class GraphUser {


		/// <summary>
		/// The user's Facebook ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The user's full name
		/// </summary>
		[Required]
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The user's first name
		/// </summary>
		[Column(Name = "first_name")]
		public string FirstName { get; set; }


		/// <summary>
		/// The user's middle name
		/// </summary>
		[Column(Name = "middle_name")]
		public string MiddleName { get; set; }


		/// <summary>
		/// The user's last name
		/// </summary>
		[Column(Name = "last_name")]
		public string LastName { get; set; }


		/// <summary>
		/// The user's gender
		/// </summary>
		[Column(Name = "gender")]
		public string Gender { get; set; }


		/// <summary>
		/// The user's locale
		/// </summary>
		[Column(Name = "locale")]
		public string Locale { get; set; }


		/// <summary>
		/// The user's languages
		/// </summary>
		[Column(Name = "languages")]
		public string Languages { get; set; }


		/// <summary>
		/// The URL of the profile for the user on Facebook
		/// </summary>
		[Column(Name = "link")]
		public string Link { get; set; }


		/// <summary>
		/// The user's Facebook username
		/// </summary>
		[Column(Name = "username")]
		public string Username { get; set; }


		/// <summary>
		/// An anonymous, but unique identifier for the user
		/// </summary>
		[Column(Name = "third_party_id")]
		public string ThirdPartyId { get; set; }


		/// <summary>
		/// The user's timezone offset from UTC
		/// </summary>
		[Column(Name = "timezone")]
		public DateTime Timezone { get; set; }


		/// <summary>
		/// The last time the user's profile was updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }


		/// <summary>
		/// The user's account verification status
		/// </summary>
		[Column(Name = "verified")]
		public string Verified { get; set; }


		/// <summary>
		/// The blurb that appears under the user's profile picture
		/// </summary>
		[Column(Name = "about")]
		public string About { get; set; }


		/// <summary>
		/// The user's biography
		/// </summary>
		[Column(Name = "bio")]
		public string Bio { get; set; }


		/// <summary>
		/// The user's birthday
		/// </summary>
		[Column(Name = "birthday")]
		public string Birthday { get; set; }


		/// <summary>
		/// A list of the user's education history
		/// </summary>
		[Column(Name = "education")]
		public string Education { get; set; }


		/// <summary>
		/// The proxied or contact email address granted by the user
		/// </summary>
		[Column(Name = "email")]
		public string Email { get; set; }


		/// <summary>
		/// The user's hometown
		/// </summary>
		[Column(Name = "hometown")]
		public string Hometown { get; set; }


		/// <summary>
		/// The genders the user is interested in
		/// </summary>
		[Column(Name = "interested_in")]
		public string InterestedIn { get; set; }


		/// <summary>
		/// The user's current location
		/// </summary>
		[Column(Name = "location")]
		public string Location { get; set; }


		/// <summary>
		/// The user's political view
		/// </summary>
		[Column(Name = "political")]
		public string Political { get; set; }


		/// <summary>
		/// The user's favorite teams
		/// </summary>
		[Column(Name = "favorite_teams")]
		public string FavoriteTeams { get; set; }


		/// <summary>
		/// The user's favorite quotes
		/// </summary>
		[Column(Name = "quotes")]
		public string Quotes { get; set; }


		/// <summary>
		/// The user's relationship status
		/// </summary>
		[Column(Name = "relationship_status")]
		public string RelationshipStatus { get; set; }


		/// <summary>
		/// The user's religion
		/// </summary>
		[Column(Name = "religion")]
		public string Religion { get; set; }


		/// <summary>
		/// The user's significant other
		/// </summary>
		[Column(Name = "significant_other")]
		public string SignificantOther { get; set; }


		/// <summary>
		/// The object type which should be user
		/// </summary>
		[Column(Name = "type")]
		public string Type { get; set; }


		/// <summary>
		/// The size of the video file and the length of the video that a user can upload
		/// </summary>
		[Column(Name = "video_upload_limits")]
		public string VideoUploadLimits { get; set; }


		/// <summary>
		/// The URL of the user's personal website
		/// </summary>
		[Column(Name = "website")]
		public string Website { get; set; }


		/// <summary>
		/// A list of the user's work history
		/// </summary>
		[Column(Name = "work")]
		public string Work { get; set; }

 
	}
	
	public partial class UserGraphService : GraphService<GraphUser> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(long id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// The Facebook apps and pages owned by the current user
		/// </summary>
		public Collection<NameCategoryIdItem> GetAccounts(long id) {
			return GetConnectionItems<NameCategoryIdItem>("accounts", id);
		}


		/// <summary>
		/// The activities listed on the user's profile
		/// </summary>
		public Collection<NameCategoryIdItem> GetActivities(long id) {
			return GetConnectionItems<NameCategoryIdItem>("activities", id);
		}


		/// <summary>
		/// The photo albums this user has created
		/// </summary>
		public Collection<GraphAlbum> GetAlbums(long id) {
			return GetConnectionItems<GraphAlbum>("albums", id);
		}


		/// <summary>
		/// The user's outstanding requests from an app
		/// </summary>
		public Collection<GraphApprequest> GetApprequests(long id) {
			return GetConnectionItems<GraphApprequest>("apprequests", id);
		}


		/// <summary>
		/// The books listed on the user's profile
		/// </summary>
		public Collection<NameCategoryIdItem> GetBooks(long id) {
			return GetConnectionItems<NameCategoryIdItem>("books", id);
		}


		/// <summary>
		/// The places that the current user has checked-into
		/// </summary>
		public Collection<GraphCheckin> GetCheckins(long id) {
			return GetConnectionItems<GraphCheckin>("checkins", id);
		}


		/// <summary>
		/// The events this user is attending
		/// </summary>
		public Collection<GraphEvent> GetEvents(long id) {
			return GetConnectionItems<GraphEvent>("events", id);
		}


		/// <summary>
		/// The user's wall
		/// </summary>
		public Collection<GraphPost> GetFeed(long id) {
			return GetConnectionItems<GraphPost>("feed", id);
		}


		/// <summary>
		/// The user's friend lists
		/// </summary>
		public Collection<GraphFriendList> GetFriendLists(long id) {
			return GetConnectionItems<GraphFriendList>("friendlists", id);
		}


		/// <summary>
		/// The user's friends
		/// </summary>
		public Collection<NameIdItem> GetFriends(long id) {
			return GetConnectionItems<NameIdItem>("friends", id);
		}


		/// <summary>
		/// The user's news feed
		/// </summary>
		public GraphPost GetHome(long id) {
			return GetConnectionItem<GraphPost>("home", id);
		}


		/// <summary>
		/// The Groups that the user belongs to
		/// </summary>
		public Collection<GraphGroup> GetGroups(long id) {
			return GetConnectionItems<GraphGroup>("groups", id);
		}


		/// <summary>
		/// The threads in this user's inbox
		/// </summary>
		public Collection<GraphMailMessage> GetInbox(long id) {
			return GetConnectionItems<GraphMailMessage>("inbox", id);
		}


		/// <summary>
		/// The interests listed on the user's profile
		/// </summary>
		public Collection<NameCategoryIdItem> GetInterests(long id) {
			return GetConnectionItems<NameCategoryIdItem>("interests", id);
		}


		/// <summary>
		/// All the pages this user has liked
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(long id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}


		/// <summary>
		/// The user's posted links
		/// </summary>
		public Collection<GraphLink> GetLinks(long id) {
			return GetConnectionItems<GraphLink>("links", id);
		}


		/// <summary>
		/// The movies listed on the user's profile
		/// </summary>
		public Collection<NameCategoryIdItem> GetMovies(long id) {
			return GetConnectionItems<NameCategoryIdItem>("movies", id);
		}


		/// <summary>
		/// The music listed on the user's profile
		/// </summary>
		public NameCategoryIdItem GetMusic(long id) {
			return GetConnectionItem<NameCategoryIdItem>("music", id);
		}


		/// <summary>
		/// The user's notes
		/// </summary>
		public Collection<GraphNote> GetNotes(long id) {
			return GetConnectionItems<GraphNote>("notes", id);
		}


		/// <summary>
		/// The messages in this user's outbox
		/// </summary>
		public Collection<GraphMailMessage> GetOutbox(long id) {
			return GetConnectionItems<GraphMailMessage>("outbox", id);
		}


		/// <summary>
		/// The permissions that user has granted the application
		/// </summary>
		public Collection<GraphPermission> GetPermissions(long id) {
			return GetConnectionItems<GraphPermission>("permissions", id);
		}


		/// <summary>
		/// The user's photos and/or the photos the user is tagged
		/// </summary>
		public Collection<GraphPhoto> GetPhotos(long id) {
			return GetConnectionItems<GraphPhoto>("photos", id);
		}


		/// <summary>
		/// The user's own posts
		/// </summary>
		public Collection<GraphPost> GetPosts(long id) {
			return GetConnectionItems<GraphPost>("posts", id);
		}


		/// <summary>
		/// The user's status updates
		/// </summary>
		public Collection<GraphStatus> GetStatuses(long id) {
			return GetConnectionItems<GraphStatus>("statuses", id);
		}


		/// <summary>
		/// The television listed on the user's profile
		/// </summary>
		public NameCategoryIdItem GetTelevision(long id) {
			return GetConnectionItem<NameCategoryIdItem>("television", id);
		}


		/// <summary>
		/// The updates in this user's inbox
		/// </summary>
		public Collection<GraphMailMessage> GetUpdates(long id) {
			return GetConnectionItems<GraphMailMessage>("updates", id);
		}


		/// <summary>
		/// The videos this user has been tagged in
		/// </summary>
		public Collection<GraphVideo> GetVideos(long id) {
			return GetConnectionItems<GraphVideo>("videos", id);
		}

		
		
	}


	[Table(Name = "Video")]
	public partial class GraphVideo {


		/// <summary>
		/// The video ID
		/// </summary>
		[Column(Name = "id")]
		public string Id { get; set; }


		/// <summary>
		/// The profile (user or page) that created the video
		/// </summary>
		[Column(Name = "from")]
		public NameUidItem From { get; set; }


		/// <summary>
		/// The users who are tagged in this video
		/// </summary>
		[Column(Name = "tags")]
		public string Tags { get; set; }


		/// <summary>
		/// The video title or caption
		/// </summary>
		[Column(Name = "name")]
		public string Name { get; set; }


		/// <summary>
		/// The html element that may be embedded in an Web page to play the video
		/// </summary>
		[Column(Name = "embed_html")]
		public string EmbedHtml { get; set; }


		/// <summary>
		/// The icon that Facebook displays when video are published to the Feed
		/// </summary>
		[Column(Name = "icon")]
		public string Icon { get; set; }


		/// <summary>
		/// A URL to the raw, playable video file
		/// </summary>
		[Column(Name = "source")]
		public string Source { get; set; }


		/// <summary>
		/// The time the video was initially published
		/// </summary>
		[Column(Name = "created_time")]
		public DateTime CreatedTime { get; set; }


		/// <summary>
		/// The last time the video or its caption were updated
		/// </summary>
		[Column(Name = "updated_time")]
		public DateTime UpdatedTime { get; set; }

 
	}
	
	public partial class VideoGraphService : GraphService<GraphVideo> {	


		/// <summary>
		/// Description
		/// </summary>
		public string GetName(string id) {
			return GetConnectionItem<string>("Name", id);
		}


		/// <summary>
		/// All of the likes on this video
		/// </summary>
		public Collection<NameCategoryIdItem> GetLikes(string id) {
			return GetConnectionItems<NameCategoryIdItem>("likes", id);
		}


		/// <summary>
		/// All of the comments on this video
		/// </summary>
		public Collection<GraphPost> GetComments(string id) {
			return GetConnectionItems<GraphPost>("comments", id);
		}

		
		
	}

}

